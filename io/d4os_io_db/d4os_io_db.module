<?php
/**
* @package    d4os
* @copyright  Copyright (C) 2010 Wene - ssm2017 Binder ( S.Massiaux ). All rights reserved.
* @license    GNU/GPL, http://www.gnu.org/licenses/gpl-2.0.html
* D4os is free software. This version may have been modified pursuant
* to the GNU General Public License, and as distributed it includes or
* is derivative of works licensed under the GNU General Public License or
* other free or open source software licenses.
*/

// TODO : separate modules
// TODO : unify the input/output with inputs = (array)$params and output = array('success'=> true, 'message' => 'message')

function d4os_io_db_init() {
  module_load_include('settings.inc', 'd4os_io_db');
}

function d4os_io_db_help($path, $arg) {
  switch ($path) {
    // Main module help for the block module
    case 'admin/help#d4os_io_db':
      return '<p>' . t('OpenSim grid management saving to the database') . '</p>';
  }
}

function d4os_io_db_menu() {
  $items = array();
  $items['admin/settings/d4os/io/db'] = array(
    'title'             => 'db',
    'description'       => 'd4os io db settings',
    'page callback'     => 'drupal_get_form',
    'page arguments'    => array('d4os_io_db_admin'),
    'access arguments'  => array('admin d4os db'),
    'type'              => MENU_NORMAL_ITEM,
    'file'              => 'd4os_io_db.admin.inc'
   );
  return $items;
}

function d4os_io_db_perm() {
  return array(
    'admin d4os db'
  );
}
/*
function d4os_io_db_check_bases() {
  // Check if the database array is set
  global $db_url;
  if (!is_array($db_url)) {
    drupal_set_message(t('No extra database defined'), 'error');
    return FALSE;
  }
  $output = TRUE;
  // asset
  if (!isset($db_url['os_asset'])) {
    drupal_set_message(t('The "asset" database info is not defined'), 'error');
    $output = FALSE;
  }
  // auth
  if (!isset($db_url['os_auth'])) {
    drupal_set_message(t('The "auth" database info is not defined'), 'error');
    $output = FALSE;
  }
  // grid
  if (!isset($db_url['os_grid'])) {
    drupal_set_message(t('The "grid" database info is not defined'), 'error');
    $output = FALSE;
  }
  // inventory
  if (!isset($db_url['os_inventory'])) {
    drupal_set_message(t('The "inventory" database info is not defined'), 'error');
    $output = FALSE;
  }
  // messaging
  if (!isset($db_url['os_messaging'])) {
    drupal_set_message(t('The "messaging" database info is not defined'), 'error');
    $output = FALSE;
  }
  // account
  if (!isset($db_url['os_user_account'])) {
    drupal_set_message(t('The "user_account" database info is not defined'), 'error');
    $output = FALSE;
  }
  // users
  if (!isset($db_url['os_users'])) {
    drupal_set_message(t('The "users" database info is not defined'), 'error');
    $output = FALSE;
  }
  // opensim
  if (!isset($db_url['os_opensim'])) {
    drupal_set_message(t('The "opensim" database info is not defined'), 'error');
    $output = FALSE;
  }
  // search
  if (!isset($db_url['os_search'])) {
    drupal_set_message(t('The "search" database info is not defined'), 'error');
    $output = FALSE;
  }
  // groups
  if (!isset($db_url['os_groups'])) {
    drupal_set_message(t('The "groups" database info is not defined'), 'error');
    $output = FALSE;
  }
  return $output;
}
*/
function d4os_io_db_set_active($name = 'default') {
  global $d4os_same_db, $d4os_db_prefix, $db_prefix;
  static $temp_db_prefix;

  // set db for default value
  if ($name == 'default') {
    $db_prefix = $temp_db_prefix;
    $temp_db_prefix = NULL;
    db_set_active('default');
    return;
  }
  // set db for multiple values
  switch (variable_get('d4os_io_db_type', 0)) {
    // same as website
    case 0:
      return;
      break;
    // single
    case 1:
      $temp_db_prefix = $db_prefix;
      $db_prefix = $d4os_db_prefix['os_single'];
      db_set_active('os_single');
      break;
    // multiple
    case 2:
      $temp_db_prefix = $db_prefix;
      $name = $d4os_same_db[$name] != 'none' ? $d4os_same_db[$name] : $name;
      $db_prefix = $d4os_db_prefix[$name];
      db_set_active($name);
      break;
  }
}

function d4os_io_db_build_bases_list() {
  $bases = array(
    'none'            => t('None'),
    'default'         => t('Website'),
    'os_grid'         => t('Grid'),
    'os_asset '       => t('Asset'),
    //'os_auth'         => t('Auth'),
    //'os_estate'       => t('Estate'),
    'os_inventory'    => t('Inventory'),
    //'os_messaging'    => t('Messaging'),
    //'os_opensim'      => t('Opensim'),
    //'os_user_account' => t('User account'),
  );
  if (module_exists('d4os_ui_groups') || module_exists('d4os_io_services_groups')) {
    $bases['os_groups'] = t('Groups');
  }
  if (module_exists('d4os_io_services_profile')) {
    $bases['os_profile'] = t('Profile');
  }
  if (module_exists('d4os_io_services_search')) {
    $bases['os_search'] = t('Search');
  }
  if (module_exists('d4os_ui_users')) {
    $bases['os_users'] = t('Users');
  }
  if (module_exists('d4os_io_services_offline_message')) {
    $bases['os_offline_message'] = t('offline_message');
  }
  return $bases;
}

function d4os_io_db_load_includes() {
  //module_load_include('inc', 'd4os_io_db', 'd4os_io_db_asset');
  //module_load_include('inc', 'd4os_io_db', 'd4os_io_db_auth');
  module_load_include('inc', 'd4os_io_db', 'd4os_io_db_grid');
  module_load_include('inc', 'd4os_io_db', 'd4os_io_db_inventory');
  //module_load_include('inc', 'd4os_io_db', 'd4os_io_db_messaging');
  //module_load_include('inc', 'd4os_io_db', 'd4os_io_db_account');
  module_load_include('inc', 'd4os_io_db', 'd4os_io_db_users');
  //module_load_include('inc', 'd4os_io_db', 'd4os_io_db_opensim');
  module_load_include('inc', 'd4os_io_db', 'd4os_io_db_search');
  module_load_include('inc', 'd4os_io_db', 'd4os_io_db_search_parser');
  module_load_include('inc', 'd4os_io_db', 'd4os_io_db_groups');
  module_load_include('inc', 'd4os_io_db', 'd4os_io_db_profile');
  module_load_include('inc', 'd4os_io_db', 'd4os_io_db_messages');
}

d4os_io_db_load_includes();