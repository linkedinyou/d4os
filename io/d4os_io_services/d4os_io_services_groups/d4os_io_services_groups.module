<?php
/**
* @package    d4os
* @copyright  Copyright (C) 2010 Wene - ssm2017 Binder ( S.Massiaux ). All rights reserved.
* @license    GNU/GPL, http://www.gnu.org/licenses/gpl-2.0.html
* D4os is free software. This version may have been modified pursuant
* to the GNU General Public License, and as distributed it includes or
* is derivative of works licensed under the GNU General Public License or
* other free or open source software licenses.
*/

global $d4os_io_services_groups_log_level;
$d4os_io_services_groups_log_level = variable_get('d4os_io_services_groups_log_level', 0);

global $groupPowers, $requestingAgent, $common_sig;
$groupPowers = array(
  'None' => '0',
  /// <summary>Can send invitations to groups default role</summary>
  'Invite' => '2',
  /// <summary>Can eject members from group</summary>
  'Eject' => '4',
  /// <summary>Can toggle 'Open Enrollment' and change 'Signup fee'</summary>
  'ChangeOptions' => '8',
  /// <summary>Can create new roles</summary>
  'CreateRole' => '16',
  /// <summary>Can delete existing roles</summary>
  'DeleteRole' => '32',
  /// <summary>Can change Role names, titles and descriptions</summary>
  'RoleProperties' => '64',
  /// <summary>Can assign other members to assigners role</summary>
  'AssignMemberLimited' => '128',
  /// <summary>Can assign other members to any role</summary>
  'AssignMember' => '256',
  /// <summary>Can remove members from roles</summary>
  'RemoveMember' => '512',
  /// <summary>Can assign and remove abilities in roles</summary>
  'ChangeActions' => '1024',
  /// <summary>Can change group Charter, Insignia, 'Publish on the web' and which
  /// members are publicly visible in group member listings</summary>
  'ChangeIdentity' => '2048',
  /// <summary>Can buy land or deed land to group</summary>
  'LandDeed' => '4096',
  /// <summary>Can abandon group owned land to Governor Linden on mainland, or Estate owner for
  /// private estates</summary>
  'LandRelease' => '8192',
  /// <summary>Can set land for-sale information on group owned parcels</summary>
  'LandSetSale' => '16384',
  /// <summary>Can subdivide and join parcels</summary>
  'LandDivideJoin' => '32768',
  /// <summary>Can join group chat sessions</summary>
  'JoinChat' => '65536',
  /// <summary>Can toggle "Show in Find Places" and set search category</summary>
  'FindPlaces' => '131072',
  /// <summary>Can change parcel name, description, and 'Publish on web' settings</summary>
  'LandChangeIdentity' => '262144',
  /// <summary>Can set the landing point and teleport routing on group land</summary>
  'SetLandingPoint' => '524288',
  /// <summary>Can change music and media settings</summary>
  'ChangeMedia' => '1048576',
  /// <summary>Can toggle 'Edit Terrain' option in Land settings</summary>
  'LandEdit' => '2097152',
  /// <summary>Can toggle various About Land > Options settings</summary>
  'LandOptions' => '4194304',
  /// <summary>Can always terraform land, even if parcel settings have it turned off</summary>
  'AllowEditLand' => '8388608',
  /// <summary>Can always fly while over group owned land</summary>
  'AllowFly' => '16777216',
  /// <summary>Can always rez objects on group owned land</summary>
  'AllowRez' => '33554432',
  /// <summary>Can always create landmarks for group owned parcels</summary>
  'AllowLandmark' => '67108864',
  /// <summary>Can use voice chat in Group Chat sessions</summary>
  'AllowVoiceChat' => '134217728',
  /// <summary>Can set home location on any group owned parcel</summary>
  'AllowSetHome' => '268435456',
  /// <summary>Can modify public access settings for group owned parcels</summary>
  'LandManageAllowed' => '536870912',
  /// <summary>Can manager parcel ban lists on group owned land</summary>
  'LandManageBanned' => '1073741824',
  /// <summary>Can manage pass list sales information</summary>
  'LandManagePasses' => '2147483648',
  /// <summary>Can eject and freeze other avatars on group owned land</summary>
  'LandEjectAndFreeze' => '4294967296',
  /// <summary>Can return objects set to group</summary>
  'ReturnGroupSet' => '8589934592',
  /// <summary>Can return non-group owned/set objects</summary>
  'ReturnNonGroup' => '17179869184',
  /// <summary>Can landscape using Linden plants</summary>
  'LandGardening' => '34359738368',
  /// <summary>Can deed objects to group</summary>
  'DeedObject' => '68719476736',
  /// <summary>Can moderate group chat sessions</summary>
  'ModerateChat' => '137438953472',
  /// <summary>Can move group owned objects</summary>
  'ObjectManipulate' => '274877906944',
  /// <summary>Can set group owned objects for-sale</summary>
  'ObjectSetForSale' => '549755813888',
  /// <summary>Pay group liabilities and receive group dividends</summary>
  'Accountable' => '1099511627776',
  /// <summary>Can send group notices</summary>
  'SendNotices'    => '4398046511104',
  /// <summary>Can receive group notices</summary>
  'ReceiveNotices' => '8796093022208',
  /// <summary>Can create group proposals</summary>
  'StartProposal' => '17592186044416',
  /// <summary>Can vote on group proposals</summary>
  'VoteOnProposal' => '35184372088832',
  /// <summary>Can return group owned objects</summary>
  'ReturnGroupOwned' => '281474976710656',
  /// <summary>Members are visible to non-owners</summary>
  'RoleMembersVisible' => '140737488355328'
);

// This is filled in by secure()
$requestingAgent = UUID_ZERO;

// Use a common signature for all the group functions  ->  struct foo($struct)
$common_sig = array(array($xmlrpcStruct, $xmlrpcStruct));

/*
* Implementation of hook_disable()
* Perform necessary actions before module is disabled. (like clear the services:methods cache)
*/
function d4os_io_services_groups_disable() {
  cache_clear_all('services:methods', 'cache');
}
/*
* Implementation of hook_disable()
* Perform necessary actions after module is enabled. (like clear the services:methods cache)
*/
function d4os_io_services_groups_enable() {
  cache_clear_all('services:methods', 'cache');
}

/**
 * Implementation of hook_help().
 */
function d4os_io_services_groups_help($path, $arg) {
  switch ($path) {
    case 'admin/help#services_groups':
      return '<p>'. t('Provides groups methods to services applications. Requires services.module.') .'</p>';
    case 'admin/modules#description':
      return t('Provides groups methods to services applications. Requires services.module.');
  }
}

function d4os_io_services_groups_menu() {
  $items['admin/settings/d4os/io/services/groups'] = array(
    'title'             => 'groups',
    'description'       => 'd4os io services groups settings',
    'page callback'     => 'drupal_get_form',
    'page arguments'    => array('d4os_io_services_groups_admin'),
    'access arguments'  => array('admin d4os io services groups'),
    'type'              => MENU_LOCAL_TASK,
    'file'              => 'd4os_io_services_groups.admin.inc'
  );
  return $items;
}

function d4os_io_services_groups_perm() {
  return array(
    'admin d4os io services groups',
  );
}

/**
 * Implementation of hook_service().
 */
function d4os_io_services_groups_service() {
  return array(
    // createGroup
    array(
      '#method'           => 'groups.createGroup',
      '#callback'         => 'd4os_io_services_groups_createGroup',
      '#access callback' => 'd4os_io_services_groups_allow_access',//'d4os_io_services_groups_createGroup_access',
      '#file'             => array('file' => 'services.inc', 'module' => 'd4os_io_services_groups'),
      '#args'             => array(
        array(
          '#name'           => 'params',
          '#type'           => 'array',
          '#description'    => t('Params.'),
        ),
      ),
      '#return'           => 'struct',
      '#help'             => t('Return group.')
    ),
    // updateGroup
    array(
      '#method'           => 'groups.updateGroup',
      '#callback'         => 'd4os_io_services_groups_updateGroup',
      '#access callback' => 'd4os_io_services_groups_allow_access',//'d4os_io_services_groups_updateGroup_access',
      '#file'             => array('file' => 'services.inc', 'module' => 'd4os_io_services_groups'),
      '#args'             => array(
        array(
          '#name'           => 'params',
          '#type'           => 'array',
          '#description'    => t('Params.'),
        ),
      ),
      '#return'           => 'struct',
      '#help'             => t('Return group.')
    ),
    // getGroup
    array(
      '#method'           => 'groups.getGroup',
      '#callback'         => 'd4os_io_services_groups_getGroup',
      '#access callback' => 'd4os_io_services_groups_allow_access',//'d4os_io_services_groups_getGroup_access',
      '#file'             => array('file' => 'services.inc', 'module' => 'd4os_io_services_groups'),
      '#args'             => array(
        array(
          '#name'           => 'params',
          '#type'           => 'array',
          '#description'    => t('Params.'),
        ),
      ),
      '#return'           => 'struct',
      '#help'             => t('Return group.')
    ),
    // findGroups
    array(
      '#method'           => 'groups.findGroups',
      '#callback'         => 'd4os_io_services_groups_findGroups',
      '#access callback' => 'd4os_io_services_groups_allow_access',//'d4os_io_services_groups_findGroups_access',
      '#file'             => array('file' => 'services.inc', 'module' => 'd4os_io_services_groups'),
      '#args'             => array(
        array(
          '#name'           => 'params',
          '#type'           => 'array',
          '#description'    => t('Params.'),
        ),
      ),
      '#return'           => 'struct',
      '#help'             => t('Return group.')
    ),
    // getGroupRoles
    array(
      '#method'           => 'groups.getGroupRoles',
      '#callback'         => 'd4os_io_services_groups_getGroupRoles',
      '#access callback' => 'd4os_io_services_groups_allow_access',//'d4os_io_services_groups_getGroupRoles_access',
      '#file'             => array('file' => 'services.inc', 'module' => 'd4os_io_services_groups'),
      '#args'             => array(
        array(
          '#name'           => 'params',
          '#type'           => 'array',
          '#description'    => t('Params.'),
        ),
      ),
      '#return'           => 'struct',
      '#help'             => t('Return group.')
    ),
    // addRoleToGroup
    array(
      '#method'           => 'groups.addRoleToGroup',
      '#callback'         => 'd4os_io_services_groups_addRoleToGroup',
      '#access callback' => 'd4os_io_services_groups_allow_access',//'d4os_io_services_groups_addRoleToGroup_access',
      '#file'             => array('file' => 'services.inc', 'module' => 'd4os_io_services_groups'),
      '#args'             => array(
        array(
          '#name'           => 'params',
          '#type'           => 'array',
          '#description'    => t('Params.'),
        ),
      ),
      '#return'           => 'struct',
      '#help'             => t('Return group.')
    ),
    // removeRoleFromGroup
    array(
      '#method'           => 'groups.removeRoleFromGroup',
      '#callback'         => 'd4os_io_services_groups_removeRoleFromGroup',
      '#access callback' => 'd4os_io_services_groups_allow_access',//'d4os_io_services_groups_removeRoleFromGroup_access',
      '#file'             => array('file' => 'services.inc', 'module' => 'd4os_io_services_groups'),
      '#args'             => array(
        array(
          '#name'           => 'params',
          '#type'           => 'array',
          '#description'    => t('Params.'),
        ),
      ),
      '#return'           => 'struct',
      '#help'             => t('Return group.')
    ),
    // updateGroupRole
    array(
      '#method'           => 'groups.updateGroupRole',
      '#callback'         => 'd4os_io_services_groups_updateGroupRole',
      '#access callback' => 'd4os_io_services_groups_allow_access',//'d4os_io_services_groups_updateGroupRole_access',
      '#file'             => array('file' => 'services.inc', 'module' => 'd4os_io_services_groups'),
      '#args'             => array(
        array(
          '#name'           => 'params',
          '#type'           => 'array',
          '#description'    => t('Params.'),
        ),
      ),
      '#return'           => 'struct',
      '#help'             => t('Return group.')
    ),
    // getGroupRoleMembers
    array(
      '#method'           => 'groups.getGroupRoleMembers',
      '#callback'         => 'd4os_io_services_groups_getGroupRoleMembers',
      '#access callback' => 'd4os_io_services_groups_allow_access',//'d4os_io_services_groups_getGroupRoleMembers_access',
      '#file'             => array('file' => 'services.inc', 'module' => 'd4os_io_services_groups'),
      '#args'             => array(
        array(
          '#name'           => 'params',
          '#type'           => 'array',
          '#description'    => t('Params.'),
        ),
      ),
      '#return'           => 'struct',
      '#help'             => t('Return group.')
    ),
    // setAgentGroupSelectedRole
    array(
      '#method'           => 'groups.setAgentGroupSelectedRole',
      '#callback'         => 'd4os_io_services_groups_setAgentGroupSelectedRole',
      '#access callback' => 'd4os_io_services_groups_allow_access',//'d4os_io_services_groups_setAgentGroupSelectedRole_access',
      '#file'             => array('file' => 'services.inc', 'module' => 'd4os_io_services_groups'),
      '#args'             => array(
        array(
          '#name'           => 'params',
          '#type'           => 'array',
          '#description'    => t('Params.'),
        ),
      ),
      '#return'           => 'struct',
      '#help'             => t('Return group.')
    ),
    // addAgentToGroupRole
    array(
      '#method'           => 'groups.addAgentToGroupRole',
      '#callback'         => 'd4os_io_services_groups_addAgentToGroupRole',
      '#access callback' => 'd4os_io_services_groups_allow_access',//'d4os_io_services_groups_addAgentToGroupRole_access',
      '#file'             => array('file' => 'services.inc', 'module' => 'd4os_io_services_groups'),
      '#args'             => array(
        array(
          '#name'           => 'params',
          '#type'           => 'array',
          '#description'    => t('Params.'),
        ),
      ),
      '#return'           => 'struct',
      '#help'             => t('Return group.')
    ),
    // removeAgentFromGroupRole
    array(
      '#method'           => 'groups.removeAgentFromGroupRole',
      '#callback'         => 'd4os_io_services_groups_removeAgentFromGroupRole',
      '#access callback' => 'd4os_io_services_groups_allow_access',//'d4os_io_services_groups_removeAgentFromGroupRole_access',
      '#file'             => array('file' => 'services.inc', 'module' => 'd4os_io_services_groups'),
      '#args'             => array(
        array(
          '#name'           => 'params',
          '#type'           => 'array',
          '#description'    => t('Params.'),
        ),
      ),
      '#return'           => 'struct',
      '#help'             => t('Return group.')
    ),
    // getGroupMembers
    array(
      '#method'           => 'groups.getGroupMembers',
      '#callback'         => 'd4os_io_services_groups_getGroupMembers',
      '#access callback' => 'd4os_io_services_groups_allow_access',//'d4os_io_services_groups_getGroupMembers_access',
      '#file'             => array('file' => 'services.inc', 'module' => 'd4os_io_services_groups'),
      '#args'             => array(
        array(
          '#name'           => 'params',
          '#type'           => 'array',
          '#description'    => t('Params.'),
        ),
      ),
      '#return'           => 'struct',
      '#help'             => t('Return group.')
    ),
    // addAgentToGroup
    array(
      '#method'           => 'groups.addAgentToGroup',
      '#callback'         => 'd4os_io_services_groups_addAgentToGroup',
      '#access callback' => 'd4os_io_services_groups_allow_access',//'d4os_io_services_groups_addAgentToGroup_access',
      '#file'             => array('file' => 'services.inc', 'module' => 'd4os_io_services_groups'),
      '#args'             => array(
        array(
          '#name'           => 'params',
          '#type'           => 'array',
          '#description'    => t('Params.'),
        ),
      ),
      '#return'           => 'struct',
      '#help'             => t('Return group.')
    ),
    // removeAgentFromGroup
    array(
      '#method'           => 'groups.removeAgentFromGroup',
      '#callback'         => 'd4os_io_services_groups_removeAgentFromGroup',
      '#access callback' => 'd4os_io_services_groups_allow_access',//'d4os_io_services_groups_removeAgentFromGroup_access',
      '#file'             => array('file' => 'services.inc', 'module' => 'd4os_io_services_groups'),
      '#args'             => array(
        array(
          '#name'           => 'params',
          '#type'           => 'array',
          '#description'    => t('Params.'),
        ),
      ),
      '#return'           => 'struct',
      '#help'             => t('Return group.')
    ),
    // setAgentGroupInfo
    array(
      '#method'           => 'groups.setAgentGroupInfo',
      '#callback'         => 'd4os_io_services_groups_setAgentGroupInfo',
      '#access callback' => 'd4os_io_services_groups_allow_access',//'d4os_io_services_groups_setAgentGroupInfo_access',
      '#file'             => array('file' => 'services.inc', 'module' => 'd4os_io_services_groups'),
      '#args'             => array(
        array(
          '#name'           => 'params',
          '#type'           => 'array',
          '#description'    => t('Params.'),
        ),
      ),
      '#return'           => 'struct',
      '#help'             => t('Return group.')
    ),
    // addAgentToGroupInvite
    array(
      '#method'           => 'groups.addAgentToGroupInvite',
      '#callback'         => 'd4os_io_services_groups_addAgentToGroupInvite',
      '#access callback' => 'd4os_io_services_groups_allow_access',//'d4os_io_services_groups_addAgentToGroupInvite_access',
      '#file'             => array('file' => 'services.inc', 'module' => 'd4os_io_services_groups'),
      '#args'             => array(
        array(
          '#name'           => 'params',
          '#type'           => 'array',
          '#description'    => t('Params.'),
        ),
      ),
      '#return'           => 'struct',
      '#help'             => t('Return group.')
    ),
    // getAgentToGroupInvite
    array(
      '#method'           => 'groups.getAgentToGroupInvite',
      '#callback'         => 'd4os_io_services_groups_getAgentToGroupInvite',
      '#access callback' => 'd4os_io_services_groups_allow_access',//'d4os_io_services_groups_getAgentToGroupInvite_access',
      '#file'             => array('file' => 'services.inc', 'module' => 'd4os_io_services_groups'),
      '#args'             => array(
        array(
          '#name'           => 'params',
          '#type'           => 'array',
          '#description'    => t('Params.'),
        ),
      ),
      '#return'           => 'struct',
      '#help'             => t('Return group.')
    ),
    // removeAgentToGroupInvite
    array(
      '#method'           => 'groups.removeAgentToGroupInvite',
      '#callback'         => 'd4os_io_services_groups_removeAgentToGroupInvite',
      '#access callback' => 'd4os_io_services_groups_allow_access',//'d4os_io_services_groups_removeAgentToGroupInvite_access',
      '#file'             => array('file' => 'services.inc', 'module' => 'd4os_io_services_groups'),
      '#args'             => array(
        array(
          '#name'           => 'params',
          '#type'           => 'array',
          '#description'    => t('Params.'),
        ),
      ),
      '#return'           => 'struct',
      '#help'             => t('Return group.')
    ),
    // setAgentActiveGroup
    array(
      '#method'           => 'groups.setAgentActiveGroup',
      '#callback'         => 'd4os_io_services_groups_setAgentActiveGroup',
      '#access callback' => 'd4os_io_services_groups_allow_access',//'d4os_io_services_groups_setAgentActiveGroup_access',
      '#file'             => array('file' => 'services.inc', 'module' => 'd4os_io_services_groups'),
      '#args'             => array(
        array(
          '#name'           => 'params',
          '#type'           => 'array',
          '#description'    => t('Params.'),
        ),
      ),
      '#return'           => 'struct',
      '#help'             => t('Return group.')
    ),
    // getAgentGroupMembership
    array(
      '#method'           => 'groups.getAgentGroupMembership',
      '#callback'         => 'd4os_io_services_groups_getAgentGroupMembership',
      '#access callback' => 'd4os_io_services_groups_allow_access',//'d4os_io_services_groups_getAgentGroupMembership_access',
      '#file'             => array('file' => 'services.inc', 'module' => 'd4os_io_services_groups'),
      '#args'             => array(
        array(
          '#name'           => 'params',
          '#type'           => 'array',
          '#description'    => t('Params.'),
        ),
      ),
      '#return'           => 'struct',
      '#help'             => t('Return group.')
    ),
    // getAgentGroupMemberships
    array(
      '#method'           => 'groups.getAgentGroupMemberships',
      '#callback'         => 'd4os_io_services_groups_getAgentGroupMemberships',
      '#access callback' => 'd4os_io_services_groups_allow_access',//'d4os_io_services_groups_getAgentGroupMemberships_access',
      '#file'             => array('file' => 'services.inc', 'module' => 'd4os_io_services_groups'),
      '#args'             => array(
        array(
          '#name'           => 'params',
          '#type'           => 'array',
          '#description'    => t('Params.'),
        ),
      ),
      '#return'           => 'struct',
      '#help'             => t('Return group.')
    ),
    // getAgentActiveMembership
    array(
      '#method'           => 'groups.getAgentActiveMembership',
      '#callback'         => 'd4os_io_services_groups_getAgentActiveMembership',
      '#access callback' => 'd4os_io_services_groups_allow_access',//'d4os_io_services_groups_getAgentActiveMembership_access',
      '#file'             => array('file' => 'services.inc', 'module' => 'd4os_io_services_groups'),
      '#args'             => array(
        array(
          '#name'           => 'params',
          '#type'           => 'array',
          '#description'    => t('Params.'),
        ),
      ),
      '#return'           => 'struct',
      '#help'             => t('Return group.')
    ),
    // getAgentRoles
    array(
      '#method'           => 'groups.getAgentRoles',
      '#callback'         => 'd4os_io_services_groups_getAgentRoles',
      '#access callback' => 'd4os_io_services_groups_allow_access',//'d4os_io_services_groups_getAgentRoles_access',
      '#file'             => array('file' => 'services.inc', 'module' => 'd4os_io_services_groups'),
      '#args'             => array(
        array(
          '#name'           => 'params',
          '#type'           => 'array',
          '#description'    => t('Params.'),
        ),
      ),
      '#return'           => 'struct',
      '#help'             => t('Return group.')
    ),
    // getGroupNotices
    array(
      '#method'           => 'groups.getGroupNotices',
      '#callback'         => 'd4os_io_services_groups_getGroupNotices',
      '#access callback' => 'd4os_io_services_groups_allow_access',//'d4os_io_services_groups_getGroupNotices_access',
      '#file'             => array('file' => 'services.inc', 'module' => 'd4os_io_services_groups'),
      '#args'             => array(
        array(
          '#name'           => 'params',
          '#type'           => 'array',
          '#description'    => t('Params.'),
        ),
      ),
      '#return'           => 'struct',
      '#help'             => t('Return group.')
    ),
    // getGroupNotice
    array(
      '#method'           => 'groups.getGroupNotice',
      '#callback'         => 'd4os_io_services_groups_getGroupNotice',
      '#access callback' => 'd4os_io_services_groups_allow_access',//'d4os_io_services_groups_getGroupNotice_access',
      '#file'             => array('file' => 'services.inc', 'module' => 'd4os_io_services_groups'),
      '#args'             => array(
        array(
          '#name'           => 'params',
          '#type'           => 'array',
          '#description'    => t('Params.'),
        ),
      ),
      '#return'           => 'struct',
      '#help'             => t('Return group.')
    ),
    // addGroupNotice
    array(
      '#method'           => 'groups.addGroupNotice',
      '#callback'         => 'd4os_io_services_groups_addGroupNotice',
      '#access callback' => 'd4os_io_services_groups_allow_access',//'d4os_io_services_groups_addGroupNotice_access',
      '#file'             => array('file' => 'services.inc', 'module' => 'd4os_io_services_groups'),
      '#args'             => array(
        array(
          '#name'           => 'params',
          '#type'           => 'array',
          '#description'    => t('Params.'),
        ),
      ),
      '#return'           => 'struct',
      '#help'             => t('Return group.')
    ),


  );
}
function d4os_io_services_groups_allow_access() {
  return TRUE;
}
