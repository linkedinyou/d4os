<?php
/**
 * @package    d4os_ui_grid_monitor
 * @subpackage regions
 * @copyright  Copyright (C) 2010 Wene - ssm2017 Binder ( S.Massiaux ). All rights reserved.
 * @license    GNU/GPL, http://www.gnu.org/licenses/gpl-2.0.html
 * D4os is free software. This version may have been modified pursuant
 * to the GNU General Public License, and as distributed it includes or
 * is derivative of works licensed under the GNU General Public License or
 * other free or open source software licenses.
 */

// TODO : see what we can do with http://domain.com:9000/admin/regioninfo/ and http://host:port/monitorstats/regionUuid/

/**
 * Implementation of hook_help()
 */
function d4os_ui_grid_monitor_regions_help($path, $arg) {
  switch ($path) {
    case 'admin/help#d4os_ui_grid_monitor_regions':
      return '<p>' . t('OpenSim grid regions management') . '</p>';
  }
}

function d4os_ui_grid_monitor_regions_menu() {
  $items['grid/monitor/regions/list'] = array(
    'title'             => 'Regions',
    'description'       => 'Regions available.',
    'page callback'     => 'd4os_ui_grid_monitor_regions_display_regions_list',
    'access arguments'  => array('view d4os ui grid regions list'),
    'type'              => MENU_NORMAL_ITEM,
  );
  
  $items['admin/settings/d4os/ui/grid/monitor/regions'] = array(
    'title'             => 'regions',
    'description'       => 'd4os ui grid monitor regions settings',
    'page callback'     => 'drupal_get_form',
    'page arguments'    => array('d4os_ui_grid_monitor_regions_admin'),
    'access arguments'  => array('admin d4os ui grid monitor regions'),
    'type'              => MENU_LOCAL_TASK,
    'file'              => 'd4os_ui_grid_monitor_regions.admin.inc'
   );
  return $items;
}

function d4os_ui_grid_monitor_regions_perm() {
  return array(
    'view d4os ui grid regions list',
    'admin d4os ui grid monitor regions',
  );
}

function d4os_ui_grid_monitor_regions_display_regions_list() {
  // check if the datastore is alive
  $alive = module_invoke_all('os_grid_is_alive');
  if (!is_array($alive) || $alive['success'] !== TRUE) {
    drupal_set_message(t('You can not see the regions list.'), 'error');
    drupal_set_message(t('Please try again later.'), 'error');
    drupal_goto();
  }
  $headers = d4os_ui_grid_monitor_regions_list_build_headers();
  $regions = module_invoke_all('os_regions_list_paged', 0, 10, $headers);
  $count = module_invoke_all('os_regions_regions_count');
  $count = $count[0];
  $output = '<div id="regions-count"><p>';
  $output .= t('There %regions registered.', array(
              '%regions' => format_plural($count, 'is 1 region', 'are @count regions')));
  $output .= '</p></div>';
  $output .= theme_d4os_ui_grid_monitor_regions_list_table($regions, $title = NULL, $params, $headers);
  $output .= theme('pager');
  return $output;
}

function d4os_ui_grid_monitor_regions_list_build_headers() {
  $items =  variable_get('d4os_ui_grid_monitor_regions_list_items', array('regionName', 'locX', 'locY'));
  $headers = array();
  if ($items['uuid']) {
    $headers[] = array(
      'data'  => t('uuid'),
      'field' => 'uuid',
    );
  }
  if ($items['regionHandle']) {
    $headers[] = array(
      'data'  => t('regionHandle'),
      'field' => 'regionHandle',
    );
  }
  if ($items['regionName']) {
    $headers[] = array(
      'data'  => t('regionName'),
      'field' => 'regionName',
    );
  }
  if ($items['serverIP']) {
    $headers[] = array(
      'data'  => t('serverIP'),
      'field' => 'serverIP',
    );
  }
  if ($items['serverPort']) {
    $headers[] = array(
      'data'  => t('serverPort'),
      'field' => 'serverPort',
    );
  }
  if ($items['serverURI']) {
    $headers[] = array(
      'data'  => t('serverURI'),
      'field' => 'serverURI',
    );
  }
  if ($items['locX']) {
    $headers[] = array(
      'data'  => t('locX'),
      'field' => 'locX',
    );
  }
  if ($items['locY']) {
    $headers[] = array(
      'data'  => t('locY'),
      'field' => 'locY',
    );
  }
  if ($items['locZ']) {
    $headers[] = array(
      'data'  => t('locZ'),
      'field' => 'locZ',
    );
  }
  if ($items['regionMapTexture']) {
    $headers[] = array(
      'data'  => t('regionMapTexture'),
      'field' => 'regionMapTextures',
    );
  }
  if ($items['serverHttpPort']) {
    $headers[] = array(
      'data'  => t('serverHttpPort'),
      'field' => 'serverHttpPort',
    );
  }
  if ($items['owner_uuid']) {
    $headers[] = array(
      'data'  => t('owner_uuid'),
      'field' => 'owner_uuid',
    );
  }
  if ($items['sizeX']) {
    $headers[] = array(
      'data'  => t('sizeX'),
      'field' => 'sizeX',
    );
  }
  if ($items['sizeY']) {
    $headers[] = array(
      'data'  => t('sizeY'),
      'field' => 'sizeY',
    );
  }
  if ($user->uid > 1) {
    $headers[] = array(
        'data'  => t('Home'),
      );
  }
  return $headers;
}

function theme_d4os_ui_grid_monitor_regions_list_table($regions, $title = NULL, $params, $headers) {
  global $user;
  // get the items list to show
  $items =  variable_get('d4os_ui_grid_monitor_regions_list_items', array('regionName', 'locX', 'locY'));

  // build the table
  $rows = array();
  $params['cols'] = $params['cols'] ? $params['cols'] : 1;
  $col = 0;
  $cells = array();
  foreach ($regions as $region) {
    if ($items['uuid']) {
      $cells[] = $region->uuid;
    }
    if ($items['regionHandle']) {
      $cells[] = $region->regionHandle;
    }
    if ($items['regionName']) {
      $cells[] = $region->regionName;
    }
    if ($items['serverIP']) {
      $cells[] = $region->serverIP;
    }
    if ($items['serverPort']) {
      $cells[] = $region->serverPort;
    }
    if ($items['serverURI']) {
      $cells[] = $region->serverURI;
    }
    if ($items['locX']) {
      $cells[] = (string)((int)$region->locX / 256);
    }
    if ($items['locY']) {
      $cells[] = (string)((int)$region->locY / 256);
    }
    if ($items['locZ']) {
      $cells[] = $region->locZ;
    }
    if ($items['regionMapTexture']) {
      $cells[] = $region->regionMapTexture;
    }
    if ($items['serverHttpPort']) {
      $cells[] = $region->serverHttpPort;
    }
    if ($items['owner_uuid']) {
      $cells[] = $region->owner_uuid;
    }
    if ($items['sizeX']) {
      $cells[] = $region->sizeX;
    }
    if ($items['sizeY']) {
      $cells[] = $region->sizeY;
    }
    if ($user->uid > 1) {
      if ($user->grid_user['homeRegion'] == $region->regionHandle) {
        $cells[] = t('My home');
      }
      else {
        $cells[] = drupal_get_form('d4os_ui_grid_monitor_regions_set_home_form', $region);
      }
    }
    ++$col;
    if ($col >= $params['cols']) {
      $rows[] = $cells;
      $cells  = array();
      $col    = 0;
    }
  }
  $output = theme_table($headers, $rows);
  return $output;
}

function d4os_ui_grid_monitor_regions_set_home_form($form_state, $region) {
  $form = array();
  $form['regionName'] = array('#type' => 'hidden', '#value' => $region->regionName);
  $form['homeRegion'] = array('#type' => 'hidden', '#value' => $region->regionHandle);
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Set Home'),
  );
  $form['#submit'][] = 'd4os_ui_grid_monitor_regions_set_home_submit';
  return $form;
}

function d4os_ui_grid_monitor_regions_set_home_submit($form, &$form_state) {
  // get the user uuid
  global $user;
  $user->d4os['grid']['presence']['home_region'] = $form_state['values']['homeRegion'];
  user_save($user, array('d4os' => $user->d4os));
  // set home
  drupal_set_message(t('Home region set to !region', array('!region' => $form_state['values']['regionName'])));
}
