<?php
/**
* @package    d4os
* @copyright  Copyright (C) 2010 Wene - ssm2017 Binder ( S.Massiaux ). All rights reserved.
* @license    GNU/GPL, http://www.gnu.org/licenses/gpl-2.0.html
* D4os is free software. This version may have been modified pursuant
* to the GNU General Public License, and as distributed it includes or
* is derivative of works licensed under the GNU General Public License or
* other free or open source software licenses.
*/
// TODO : http://domain.com:8002/get_grid_info to get loginuri
/*
AgnFt
AgnUp
AssetServiceRequestFailures
AssetsInCache
AtvPrm
AtvScr
BlockedMissingTexturesRequests
ChildAg
Dilatn
ImgsFt
InventoryServiceRetrievalFailures
Memory
NetFt
OthrFt
PendDl
PendUI
PhyFPS
PhysFt
PktOut
PktsIn
Prims
RootAg
ScrLPS
SimpFPS
TimeAfterCacheMiss
TotiFt
UnackB
Uptime
Version
AbnormalClientThreadTerminations
*/
module_load_include('inc', 'd4os_ui_stats_levels', '/widgets/text/d4os_ui_stats_levels_widgets_text');

function d4os_ui_stats_levels_init() {
  $widgets = array(
    array(
      'name' => 'text',
      'title' => t('Text'),
    ),
  );
  $results = module_invoke_all('d4os_widget_add');
  if (count($results)) {
    foreach ($results['name'] as $k => $result) {
      $widgets[] = array(
        'name'  => $result,
        'title' => $results['title'][$k],
      );
    }
  }
  variable_set('d4os_ui_stats_levels_widgets', $widgets);
}

function d4os_ui_stats_levels_menu() {
  $items = array();
  $items['grid/stats/levels'] = array(
    'title'             => 'Levels',
    'description'       => 'Get the grid levels in json format.',
    'page callback'     => 'd4os_ui_stats_levels_js',
    'access callback'   => TRUE,
    'type'              => MENU_CALLBACK,
  );
  return $items;
}

function d4os_ui_stats_levels_block($op = 'list', $delta = 0, $edit = array()) {
  $block = array();
  switch ($op) {

    case 'list':
      $block['levels']["info"] = t('Grid levels');
      break;

    case 'view':
      switch ($delta) {
        case 'levels';
          $content = d4os_ui_stats_levels_display();
          $block['subject'] = t('Grid levels');
          $block['content'] = $content;
          break;
      }
      break;

    case 'configure':
      switch ($delta) {
        case 'levels':
          return d4os_ui_stats_levels_params_form();
          break;
      }
      break;
      
    case 'save':
      switch ($delta) {
        case 'levels':
          d4os_ui_stats_levels_params_save($edit);
          break;
      }
      return;
      break;
  }
  return $block;
}

function d4os_ui_stats_levels_params_form() {
  global $grid_url;
  $url = $grid_url. '/jsonSimStats/';

  $widgets = variable_get('d4os_ui_stats_levels_widgets', array(array('name'=>'text', 'title'=>t('Text'))));
  $form = array();
  $form['d4os_ui_stats_levels_data'] = array(
    '#type'         => 'fieldset',
    '#title'        => t('Data'),
    '#collapsible'  => TRUE,
    '#collapsed'    => FALSE,
  );
  $form['d4os_ui_stats_levels_data']['d4os_ui_stats_levels_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Levels url'),
    '#description' => t('Use the url to get the info from.'),
    '#default_value' => variable_get('d4os_ui_stats_levels_url',  $url),
    '#description' => t('Enter the url to get the json infos (you need to enable this option in OpenSim.ini.'),
  );
  $form['d4os_ui_stats_levels_data']['timer'] = array(
    '#type'         => 'fieldset',
    '#title'        => t('Timer'),
    '#collapsible'  => TRUE,
    '#collapsed'    => FALSE,
  );
  $form['d4os_ui_stats_levels_data']['timer']['d4os_ui_stats_levels_use_timer'] = array(
    '#type'           => 'checkbox',
    '#default_value'  => variable_get('d4os_ui_stats_levels_use_timer', 1),
    '#title'          => t('Use timer.'),
    '#description'    => t('Check this option if you want to use a timer to refresh automatically the levels on the web page.'),
  );
  $form['d4os_ui_stats_levels_data']['timer']['d4os_ui_stats_levels_timer'] = array(
    '#type'           => 'textfield',
    '#title'          => t('Timer'),
    '#size'           => 5,
    '#maxlength'      => 5,
    '#default_value'  => variable_get('d4os_ui_stats_levels_timer', 15),
    '#description'    => t("Enter the value for the timer (in seconds) to refresh the data."),
  );
  $form['d4os_ui_stats_levels_display'] = array(
    '#type'         => 'fieldset',
    '#title'        => t('Display'),
    '#collapsible'  => TRUE,
    '#collapsed'    => FALSE,
  );
  $options = array();
  foreach ($widgets as $widget) {
    $options[$widget['name']] = $widget['title'];
  }
  $form['d4os_ui_stats_levels_display']['d4os_ui_stats_levels_display_widget'] = array(
    '#type'           => 'select',
    '#title'          => t('Select the output widget type'),
    '#default_value'  => variable_get('d4os_ui_stats_levels_display_widget','text'),
    '#options'        => $options,
    '#description' => t('Select the output widget type.'),
  );
  foreach ($widgets as $widget) {
    $widget_name = 'd4os_ui_stats_levels_widgets_'. $widget['name'];
    $form[] = module_invoke($widget_name, 'params_form');
  }
  return $form;
}

function d4os_ui_stats_levels_params_save($edit) {
  // data
  variable_set('d4os_ui_stats_levels_url',            $edit['d4os_ui_stats_levels_url']);
  variable_set('d4os_ui_stats_levels_use_timer',      $edit['d4os_ui_stats_levels_use_timer']);
  variable_set('d4os_ui_stats_levels_timer',          $edit['d4os_ui_stats_levels_timer']);
  // display type
  variable_set('d4os_ui_stats_levels_display_type',   $edit['d4os_ui_stats_levels_display_type']);
  variable_set('d4os_ui_stats_levels_display_widget', $edit['d4os_ui_stats_levels_display_widget']);
  // widgets
  $widgets = variable_get('d4os_ui_stats_levels_widgets', array(array('name'=>'text', 'title'=>t('Text'))));
  foreach ($widgets as $widget) {
    $widget_name = 'd4os_ui_stats_levels_widgets_'. $widget['name'];
    module_invoke($widget_name, 'params_save', $edit);
  }
}

function d4os_ui_stats_levels_display() {
  global $grid_url, $base_url;
  $output = '';
  $url = $grid_url. '/jsonSimStats/';
  $levels_url = variable_get('d4os_ui_stats_levels_url',  $url);
  if (variable_get('d4os_ui_stats_levels_use_timer', 1)) {
    drupal_add_js(libraries_get_path('jquery.timer').'/jquery.timer.js');
    $js_vars = array(
      'url'   => $levels_url,
      'timer' => variable_get('d4os_ui_stats_levels_timer', 15),
    );
    drupal_add_js(array('d4os_ui_stats_levels' => $js_vars), 'setting');
    drupal_add_js(drupal_get_path('module', 'd4os_ui_stats_levels').'/js/d4os_ui_stats_levels_data.js', 'module', 'footer');
  }
  // build the error message
  $error_msg = theme('d4os_ui_stats_levels_error');
  $display_attributes = array(
    'levels'  => array(
        'class' => '',
        'style' => '',
      ),
    'error'   => array(
        'class' => 'js-hide',
        'style' => 'display:none;',
      ),
  );
  // get the values from the grid
  $response = drupal_http_request($levels_url);
  if ($response->code != 200) {
    $display_attributes['levels']['class'] = 'js-hide';
    $display_attributes['levels']['style'] = 'display:none;';
    $display_attributes['error']['class'] = '';
    $display_attributes['error']['style'] = '';
  }
  // build the answer values
  $data = json_decode($response->data);

  // add the login uri to the data
  $data->loginuri = variable_get('d4os_default_login_uri', $base_url). ':'. variable_get('d4os_default_login_port', '8002');

  // get the widget type
  $widget = NULL;
  $widget_name = 'd4os_ui_stats_levels_widgets_'. variable_get('d4os_ui_stats_levels_display_widget','text');
  if ($widget_name != 'd4os_ui_stats_levels_widgets_text') {
    $widget = module_invoke($widget_name, 'display', $data);
  }
  else {
    $widget = d4os_ui_stats_levels_widgets_text_display($data);
  }

  // get the main template
  $output = '<div id="d4os-stats-levels" style="'. $display_attributes['levels']['style']. '">';
  $output .= theme('d4os_ui_stats_levels', $data, $widget, $error_msg, $display_attributes);
  $output .= '</div><div id="d4os-stats-levels-error" style="'. $display_attributes['error']['style']. '">'. $error_msg. '</div>';
  return $output;
}

function d4os_ui_stats_levels_js() {
  global $grid_url;
  $url = $grid_url. '/jsonSimStats/';
  $response = drupal_http_request(variable_get('d4os_ui_stats_levels_url',  $url));
  if ($response->code != 200) {
    echo drupal_json('error');
  }
  else {
    drupal_set_header('Content-Type: text/javascript; charset=utf-8');
    echo $response->data;
  }
}

function d4os_ui_stats_levels_theme() {
  return array(
    // levels base
    'd4os_ui_stats_levels_error' => array(
      'arguments' => array(),
    ),
    'd4os_ui_stats_levels' => array(
      'path'      => drupal_get_path('module', 'd4os_ui_stats_levels').'/theme',
      'template'  => 'd4os_ui_stats_levels',
      'arguments' => array('data' => NULL, 'widget' => NULL, 'error_msg' => NULL, 'display_attributes' => array()),
    ),
    // widget
    'd4os_ui_stats_levels_widgets' => array(
      'arguments' => array(),
    ),
    // widget text
    'd4os_ui_stats_levels_widgets_text' => array(
      'path'      => drupal_get_path('module', 'd4os_ui_stats_levels').'/widgets/text/theme',
      'template'  => 'd4os_ui_stats_levels_widgets_text',
      'arguments' => array('data' => NULL),
    ),
  );
}

function theme_d4os_ui_stats_levels_error() {
  $output = '<div class="messages error">'. t('Data not available'). '</div>';
  return $output;
}

function theme_d4os_ui_stats_levels_widgets() {
  $output = '
<div id="d4os-stats-levels-widget">
  <div id="simfps_chart_div"></div>
  <div id="phyfps_chart_div"></div>
  <div id="memory_chart_div"></div>
</div>
  ';
  return $output;
}